--- ---  AOP 是怎么实现的
答： 动态代理，修改class字节码
JDK 基於接口的動態代理
cglib 基於類的動態代理

AOP是Aspect Oriented Programming的缩写，意思是面向切面编程.与OOP(Object Oriented Programming)面向对象编程对等,都是一种编程思想.
从OOP角度分析,我们关注业务的处理逻辑,是属于纵向的行为,从AOP角度分析,我们关注对象行为发生时的问题，是属于横向的问题.
AOP就是把贯穿在各个模块之间相同的功能抽取出来，然后封装成一个面.
AOP的作用: 1.监控函数的调用 2.捕获异常的发生
实际应用于:事务,安全,日志等横切关注

两种方式实现AOP的方式:
1.JDK提供的动态代理实现,Spring规定对于有接口的类用JDK,对于无接口和抽象类使用cglib,
  虽然cglib均可代理，但是cglib复杂，效率低，而且cglib中代理的类中不能有final的方法.
2.其中对于AOP来说,他也可以理解为一个面，在这个面里面我们利用代理类来找目标对象是什么,拦截那些方法,然后在这些方法的前后也可以执行一些操作.

--- ---  IOC(Inversion of control):控制反转,依赖注入
概念:控制权有对象本身专享容器,由容器根据配置文件去创建实例,并创建各个实例之间的关系,
则通俗的说，对象的创建再也不需要程序员来管理,而是可以有spring容器来进行创建和销毁,我们只需要关注业务逻辑.
依赖IOC容器并管理bean,有两种,一种是BeanFactory,另一种是ApplicationContext,但是APPlicationContext extends BeanFactory.







